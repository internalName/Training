// Decompiled with JetBrains decompiler
// Type: System.IConvertible
// Assembly: mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: 38C94DDE-2C5E-44AC-BCDB-DDA2D9F231CC
// Assembly location: C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll

using System.Runtime.InteropServices;

namespace System
{
  /// <summary>
  ///   Определяет методы, которые преобразуют значение реализующей ссылки или типа значения в тип среды CLR с эквивалентным значением.
  /// </summary>
  [CLSCompliant(false)]
  [ComVisible(true)]
  [__DynamicallyInvokable]
  public interface IConvertible
  {
    /// <summary>
    ///   Возвращает <see cref="T:System.TypeCode" /> для данного экземпляра.
    /// </summary>
    /// <returns>
    ///   Перечислимая константа, которая является <see cref="T:System.TypeCode" /> класса или типа значения, реализующего этот интерфейс.
    /// </returns>
    [__DynamicallyInvokable]
    TypeCode GetTypeCode();

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное логическое значение, с помощью указанного языком и региональными параметрами сведения о форматировании.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Реализацию, предоставляющий сведения о форматировании для определенного языка и региональных параметров интерфейса.
    /// </param>
    /// <returns>
    ///   Логическое значение, эквивалентное значению этого экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    bool ToBoolean(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентный символ Юникода, используя заданную информацию форматирования конкретного языка и региональных параметров.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Интерфейса реализации, предоставляющий сведения о форматировании для определенного языка и региональных параметров.
    /// </param>
    /// <returns>
    ///   Знак Юникода, эквивалентный значению данного экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    char ToChar(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное 8-разрядное целое число со знаком с использованием указанного языком и региональными параметрами сведения об особенностях форматирования.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Интерфейса реализации, предоставляющий сведения о форматировании для определенного языка и региональных параметров.
    /// </param>
    /// <returns>
    ///   8-разрядное целое число со знаком, эквивалентное значению этого экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    sbyte ToSByte(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное 8-разрядное целое число без знака с использованием указанного языком и региональными параметрами сведения об особенностях форматирования.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Интерфейса реализации, предоставляющий сведения о форматировании для определенного языка и региональных параметров.
    /// </param>
    /// <returns>
    ///   8-разрядное целое число без знака эквивалентно значению данного экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    byte ToByte(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение данного экземпляра в эквивалентное ему 16-разрядное целое число со знаком с использованием указанного языком и региональными параметрами сведения об особенностях форматирования.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Интерфейса реализации, предоставляющий сведения о форматировании для определенного языка и региональных параметров.
    /// </param>
    /// <returns>
    ///   16-разрядное целое число со знаком, эквивалентное значению этого экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    short ToInt16(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение данного экземпляра в эквивалентное ему 16-разрядное целое число без знака с помощью указанного языком и региональными параметрами сведения об особенностях форматирования.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Интерфейса реализации, предоставляющий сведения о форматировании для определенного языка и региональных параметров.
    /// </param>
    /// <returns>
    ///   16-разрядное целое число без знака эквивалентно значению данного экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    ushort ToUInt16(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение данного экземпляра в эквивалентное 32-разрядное целое число со знаком с использованием указанного языком и региональными параметрами сведения о форматировании.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Реализацию, предоставляющий сведения о форматировании для определенного языка и региональных параметров интерфейса.
    /// </param>
    /// <returns>
    ///   32-разрядное целое число со знаком, эквивалентное значению этого экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    int ToInt32(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное 32-разрядное целое число без знака с использованием указанного языком и региональными параметрами сведения об особенностях форматирования.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Интерфейса реализации, предоставляющий сведения о форматировании для определенного языка и региональных параметров.
    /// </param>
    /// <returns>
    ///   32-разрядное целое число без знака эквивалентно значению данного экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    uint ToUInt32(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное 64-разрядное целое число со знаком с использованием указанного языком и региональными параметрами сведения об особенностях форматирования.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Интерфейса реализации, предоставляющий сведения о форматировании для определенного языка и региональных параметров.
    /// </param>
    /// <returns>
    ///   64-разрядное целое число со знаком, эквивалентное значению этого экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    long ToInt64(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное 64-разрядное целое число без знака с использованием указанного языком и региональными параметрами сведения об особенностях форматирования.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Интерфейса реализации, предоставляющий сведения о форматировании для определенного языка и региональных параметров.
    /// </param>
    /// <returns>
    ///   64-разрядное целое число без знака эквивалентно значению данного экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    ulong ToUInt64(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение данного экземпляра в эквивалентное число одинарной точности число с плавающей запятой с помощью указанного языком и региональными параметрами сведения об особенностях форматирования.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Реализацию, предоставляющий сведения о форматировании для определенного языка и региональных параметров интерфейса.
    /// </param>
    /// <returns>
    ///   Число с плавающей запятой одиночной точности эквивалентно значению данного экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    float ToSingle(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное число двойной точности с плавающей запятой с использованием указанного языка и региональных параметров сведения об особенностях форматирования.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Реализацию, предоставляющий сведения о форматировании для определенного языка и региональных параметров интерфейса.
    /// </param>
    /// <returns>
    ///   Число с плавающей запятой двойной точности эквивалентно значению данного экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    double ToDouble(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное <see cref="T:System.Decimal" /> номер, используя заданную информацию форматирования конкретного языка и региональных параметров.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Интерфейса реализации, предоставляющий сведения о форматировании для определенного языка и региональных параметров.
    /// </param>
    /// <returns>
    ///   A <see cref="T:System.Decimal" /> число, эквивалентное значению данного экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    Decimal ToDecimal(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное <see cref="T:System.DateTime" /> с помощью указанного языком и региональными параметрами сведения о форматировании.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Реализацию, предоставляющий сведения о форматировании для определенного языка и региональных параметров интерфейса.
    /// </param>
    /// <returns>
    ///   Объект <see cref="T:System.DateTime" /> экземпляра, эквивалентное значению этого экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    DateTime ToDateTime(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение этого экземпляра в эквивалентное <see cref="T:System.String" /> с помощью указанного языком и региональными параметрами сведения о форматировании.
    /// </summary>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Реализацию, предоставляющий сведения о форматировании для определенного языка и региональных параметров интерфейса.
    /// </param>
    /// <returns>
    ///   Объект <see cref="T:System.String" /> экземпляра, эквивалентное значению этого экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    string ToString(IFormatProvider provider);

    /// <summary>
    ///   Преобразует значение данного экземпляра, <see cref="T:System.Object" /> указанного <see cref="T:System.Type" /> , с эквивалентным значением, с помощью указанного языком и региональными параметрами сведения о форматировании.
    /// </summary>
    /// <param name="conversionType">
    ///   <see cref="T:System.Type" /> В который преобразуется значение данного экземпляра.
    /// </param>
    /// <param name="provider">
    ///   <see cref="T:System.IFormatProvider" /> Реализацию, предоставляющий сведения о форматировании для определенного языка и региональных параметров интерфейса.
    /// </param>
    /// <returns>
    ///   <see cref="T:System.Object" /> Экземпляр типа <paramref name="conversionType" /> , значение которого эквивалентно значению данного экземпляра.
    /// </returns>
    [__DynamicallyInvokable]
    object ToType(Type conversionType, IFormatProvider provider);
  }
}
